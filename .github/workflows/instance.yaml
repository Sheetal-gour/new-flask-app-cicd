on: push

name: Check
env:
  AWS_REGION: "us-east-1"
  REMOTE_HOST: "ec2-34-204-52-233.compute-1.amazonaws.com"
  REMOTE_USER: "ubuntu"

jobs:
  check:
    name: first-job
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
          
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
          

    - name: create-ecr-repo
      run: |
        aws ecr create-repository --repository-name hello-world --image-scanning-configuration scanOnPush=true --region us-east-1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: https://${{ steps.create-ecr-repo.outputs.registryId }}.dkr.ecr.us-west-2.amazonaws.com
        ECR_REPOSITORY: ${{ steps.create-ecr-repo.outputs.repositoryName}}
        IMAGE_TAG: 1.2
      run: |
        docker build --tag docker-flask-image:$IMAGE_TAG .
        docker tag docker-flask-image:$IMAGE_TAG ${{ secrets.DOCKERHUB_USERNAME }}/docker-flask-image:$IMAGE_TAG 
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/docker-flask-image:$IMAGE_TAG
        
    - name: Delete ecr repository
      run: |
        aws ecr delete-repository --repository-name hello-world --force

    - name: Configure SSH
      run: |
        mkdir -p ~/.ssh/
        echo "$SSH_KEY_PAIR" > ~/.ssh/github-actions-key
        chmod 600 ~/.ssh/github-actions-key
        cat >>~/.ssh/config <<END
        Host ec2
          HostName $SSH_HOST
          User $SSH_USER
          IdentityFile ~/.ssh/github-actions-key
          StrictHostKeyChecking no
        END
      env:
        SSH_HOST: ${{ env.REMOTE_HOST }}
        SSH_USER: ${{ env.REMOTE_USER }}
        SSH_KEY: ${{ secrets.SSH_KEY_PAIR }} 
  
    